"""
此模块定义了评估体系的核心组件。
它被设计为可以在不同的 AI Agent 框架或应用场景中共享和复用。
This module defines the core components of the evaluation system.
It is expected to be shared among different AI Agent frameworks or application scenarios.
"""

from abc import ABC, abstractmethod


class Feedback:
    """
    反馈信息类。
    Represents feedback information from an evaluation.

    设计原则 (Design Principle):
        - 它更像一个数据类（dataclass），主要用于封装评估结果。
          It will be more like a **dataclass**, primarily for encapsulating evaluation results.
        - 反馈对象的构建过程应主要由评估器（Evaluator）负责。
          The building process of the feedback object should primarily be handled by the Evaluator.
    """

    def finished(self) -> bool:
        """
        判断相关任务是否已经完成。
        Determines if the associated task is finished.

        在某些实现中，任务可能会多次失败，导致智能体选择跳过该任务的实现。
        因此，无论是“跳过（skip）”还是“成功（success）”，都可能表示任务已结束。
        In some implementations, tasks may fail multiple times, leading agents to skip the implementation.
        So both skip and success can indicate the task is finished.

        :return: 如果任务已完成，则为 True；否则为 False。
                 True if the task is finished, False otherwise.
        """
        # 默认实现依赖于 __bool__ 方法的结果。
        # The default implementation relies on the result of the __bool__ method.
        return self.__bool__()

    def __bool__(self) -> bool:
        """
        定义 Feedback 对象在布尔上下文中的值。
        Defines the value of a Feedback object in a boolean context.

        默认情况下，一个 Feedback 实例被视为 True，可能暗示“成功”或“已完成”。
        By default, a Feedback instance is considered True, potentially implying "success" or "completed".
        子类可以覆盖此方法以提供更具体的逻辑。
        Subclasses can override this method to provide more specific logic.

        :return: 默认返回 True。
                 Defaults to True.
        """
        return True


class EvaluableObj:
    """
    可评估对象类。
    Represents an object or a set of information that can be evaluated.

    它可以包含以下内容 (Following things can be included):
    - Task (任务): 对任务的描述或定义。
                   Description or definition of the task.
    - Solution (解决方案): 智能体针对任务生成的解决方案（例如代码、模型配置、文本等）。
                         The solution generated by the agent for the task (e.g., code, model configuration, text).
    - Ground Truth (基准真相): 用于评估解决方案的正确性或质量的参考标准或真实答案。
                             Reference standard or actual answer used to assess the correctness or quality of the solution.
    """
    # 这是一个基类或标记类，通常不包含具体方法，主要用于类型提示和概念划分。
    # This is a base class or marker class, typically without concrete methods,
    # primarily used for type hinting and conceptual grouping.
    pass


class Evaluator(ABC):
    """
    评估器抽象基类。
    Abstract base class for an Evaluator.

    设计原则 (Design Principle):
        - 评估器应负责从原始信息构建结构化的反馈（Feedback）对象。
          It should cover the building process of structured feedback (Feedback) from raw information.
        - 通常，反馈的构建可能分为两个阶段：
          Typically, the building of feedback might occur in two phases:
            1. 原始信息处理（例如标准输出、工作区文件）：这部分可能由 Feedback 对象自身或其辅助类处理。
               Raw information processing (e.g., stdout, workspace files): This part might be handled by the Feedback object itself or its helper classes.
            2. 高级/总结性反馈信息生成：这部分由 Evaluator 的 `evaluate` 方法负责。
               Advanced/summarized feedback information generation: This part is handled by the Evaluator's `evaluate` method.
    """

    @abstractmethod
    def evaluate(
        self,
        eo: EvaluableObj, # eo: 可评估对象 (Evaluable Object)
    ) -> Feedback:
        """
        评估一个可评估对象。
        Evaluates an evaluable object.

        :param eo: 需要被评估的对象实例。
                   The instance of the object to be evaluated.
        :return: 评估后产生的反馈信息对象。
                 The feedback information object produced after evaluation.
        """
        # 子类必须实现此方法以提供具体的评估逻辑。
        # Subclasses must implement this method to provide specific evaluation logic.
        raise NotImplementedError
