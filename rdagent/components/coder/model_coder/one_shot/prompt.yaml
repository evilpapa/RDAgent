code_implement_sys: |-
  您是一名助手，负责回答用户的问题。
code_implement_user: |-
  根据以下提供的信息，使用 pytorch 和 torch_geometric 编写 Python 代码以实现模型。
  该模型属于图学习领域，仅有一层。
  输入为节点特征 [num_nodes, dim_feature] 和边索引 [2, num_edges]（它将是模型前向传播的输入）。
  输入中没有边属性或边权重。模型应检测节点特征和边索引的形状，如果模型中有线性变换层，则输入和输出形状应保持一致。in_channels 是节点特征的维度。
  根据以下信息实现模型的前向传播函数：模型公式信息。
  1. 模型名称:{{name}}
  2. 模型描述:{{description}}
  3. 模型公式:{{formulation}}
  4. 模型变量:{{variables}}。
  您必须尽可能完成前向传播函数。
  执行 您实现的代码将以以下方式执行：
  实现的代码将被放置在类似 [uuid]/model.py 的文件中。
  我们将在设置 cwd 到目录后从文件 `model.py` 中导入实现的模型
  - from model import model_cls（因此您必须在文件中有一个名为 `model_cls` 的变量）
    - 因此，您实现的代码可以遵循以下模式
      ```Python
      class XXXLayer(torch.nn.Module):
          ...
      model_cls = XXXLayer
      ```
  - 通过初始化 `model_cls(input_dim=INPUT_DIM)` 来初始化模型
  - 然后通过输入特定的张量来验证模型，比较输出张量。
